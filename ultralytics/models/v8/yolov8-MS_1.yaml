# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 9

  - [[9, 8, 6, 4, 2,0], 1, mcs, [ ]] #10
  - [-1, 1, Conv, [128, 3, 2]]  # 11-P2/4
  - [-1, 3, C2f, [128, True]]   #12

  - [[ 9, 8, 6, 4,-1], 1, mcs, [ ]]   #13
  - [-1, 1, Conv, [256, 3, 2]]  # 14-P3/8
  - [-1, 6, C2f, [256, True]]  # 15

  - [[ 9 , 8 , 6,-1], 1, mcs, [ ]]  #16
  - [-1, 1, Conv, [512, 3, 2]]  # 17-P4/16
  - [-1, 6, C2f, [512, True]]   # 18

  - [[9, 8,-1], 1, mcs, [ ]]   #19
  - [-1, 1, Conv, [1024, 3, 2]]  # 20-P5/32
  - [-1, 3, C2f, [1024, True]]#21

  - [[9, -1], 1,mcs, [ ]]  #22
  - [-1, 1, SPPF, [1024, 5]]  # 23

  - [-1, 1, AIFI, [ ]]#24
# YOLOv8.0n head
head:
  #ç¬¬å››å±‚
  - [12 , 1 , Conv , [128 , 3, 2]] #25
#  - [-1 , 1 , AIFI,  [ ] ]#40   ---2

  - [15 , 1, Conv ,[256, 3, 4]] #26 ---4
  - [18 , 1, Conv ,[512, 3, 2]]# 20*20  -27  ----6
  - [[-1, 23,24 ,26], 1, Concat, [1]]#28
  - [-1, 3, MS, [1024]]#  29---

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]#30 40*40
  - [15 , 1, Conv ,[256, 3, 2]]#31
  - [[-1, 18 ,30], 1, Concat, [1]]#32  # cat backbone P4
  - [-1, 3 ,MS, [512]]#33---

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]#34  80*80
  - [[-1, 15], 1, Concat, [1]]#35 # cat backbone P3
  - [-1, 3, MS, [256]]#36

  - [[-1,15,25] , 1 , Concat , [1]] #37
  - [-1, 3, MS, [256]]#38  ------------- p3

  - [-1, 1, Conv, [256, 3, 2]]#39
  - [36, 1, Conv ,[256, 3, 2]]#40

  - [[-1, 39 ,33 ,18 ], 1, Concat, [1]]#41 # cat head P4 40*40
  - [-1, 3, MS, [512]]#42

  - [-1, 1, Conv, [512, 3, 2]]#43 20*20

  - [33, 1, Conv, [512, 3, 2]]#44 20*20
  - [36, 1, Conv, [512, 3, 4]] #45
  - [[-1, 44 , 43 , 29 , 23], 1, Concat, [1]]  # cat head P5 20*20----46
  - [-1, 3, MS, [1024]]#47


  - [ [ 36,38 ] ,1 , Concat, [1] ] #48
  - [ -1, 3, MS, [ 256 ] ] #49


  - [ [ 42,33] ,1 , Concat, [1] ] #51
  - [ -1, 3, MS, [ 512 ] ] #52


  - [ [ 47,29 ] ,1 , Concat, [1] ] #54
  - [ -1, 3, MS, [ 1024 ] ] #55


  - [[49, 51, 53 ,36,33,29],1,DetectAux, [nc]]  # Detect(P3, P4, P5)  57
